datasource db {
  provider = "postgresql"
  url      = "postgresql://prod_manage_database_user:GorbgRzhquoItYMO3rT7Ja5nWC0RCI0T@dpg-crne8pt6l47c73aeihj0-a.oregon-postgres.render.com/prod_manage_database"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                 Int           @id @default(autoincrement())
  token              String        @unique
  password           String
  name               String
}

model CutRecord {
  id           Int       @id @default(autoincrement())
  code         String
  pieceAmount  Int
  line1        String
  line2        String
  limiteDate   DateTime
  comment      String?  
  supplier     String
  status       String   @default("in progress") 
  image        Bytes?  
  createdAt    DateTime @default(now())  
  updatedAt    DateTime @default(now()) @updatedAt  
  employeeId   Int?     
  employee     Employee? @relation("EmployeeCutRecords", fields: [employeeId], references: [id], onDelete: SetNull)
}


model OperationRecord {
  id             Int      @id @default(autoincrement())
  cutType        String   
  operationName  String   
  calculatedTime String  
  createdAt      DateTime @default(now())  
}

model Employee {
  id           Int         @id @default(autoincrement())
  name         String
  roleId       Int
  entryDate    DateTime
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @default(now()) @updatedAt
  cutRecords   CutRecord[] @relation("EmployeeCutRecords")
  performances Performance[] 
  role         Role       @relation(fields: [roleId], references: [id])
}

model Role {
  id           Int         @id @default(autoincrement())
  title        String      @unique  
  description  String?     
  employees    Employee[]  
}

model Performance {
  id          Int       @id @default(autoincrement())
  employeeId  Int
  date        DateTime  
  schedules   Json      
  produced    Int
  meta        Int
  isCompleted Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  employee    Employee  @relation(fields: [employeeId], references: [id], onDelete: Cascade)
}
